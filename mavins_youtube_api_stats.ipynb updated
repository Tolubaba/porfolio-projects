{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "mavins youtube api stats",
      "provenance": [],
      "authorship_tag": "ABX9TyPmfLP3zkvkMJJ02trGqNOt",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Tolubaba/porfolio-projects/blob/master/mavins_youtube_api_stats.ipynb%20updated\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "MK3Umz4PYT_f"
      },
      "outputs": [],
      "source": [
        "import pandas  as pd\n",
        "from googleapiclient.discovery import build"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apikey='AIzaSyDJbEmLwNIUc1Y6ZlCHNKeNmQykbrmZn0g'\n",
        "channelid='UC2g8yvxi_X5GxyEor9L1KNA'"
      ],
      "metadata": {
        "id": "JTxv1c7fYYsK"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas  as pd\n",
        "from googleapiclient.discovery import build\n"
      ],
      "metadata": {
        "id": "03jh3ecOYZCo"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "the v3 stands for the  api version while the developer key stands for the apikey hey gooten from googel clouds cerdetials\n",
        "we can somtimes use the channels name in place of channel id but \n",
        "we say forusername: channel name"
      ],
      "metadata": {
        "id": "dyx-fAkFZ2fJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "apikey='AIzaSyDJbEmLwNIUc1Y6ZlCHNKeNmQykbrmZn0g'\n",
        "channelid='UC2g8yvxi_X5GxyEor9L1KNA'\n",
        "\n"
      ],
      "metadata": {
        "id": "LNwN9G6DeXHz"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "def videos():\n",
        "  order=[]\n",
        "  apikey='AIzaSyDJbEmLwNIUc1Y6ZlCHNKeNmQykbrmZn0g'\n",
        "  channelid='UC2g8yvxi_X5GxyEor9L1KNA'\n",
        "\n",
        "  youtube=build('youtube','v3',developerKey=apikey)\n",
        "  request=youtube.channels().list(\n",
        "    part='statistics,snippet, contentDetails',\n",
        "    id=channelid\n",
        "  )\n",
        "  response= request.execute()\n",
        "  response\n",
        "\n",
        "  for items in response['items']:\n",
        "    playlistid=items['contentDetails']['relatedPlaylists']['uploads']\n",
        "    title=items['snippet']['title']\n",
        "    date_published=items['snippet']['publishedAt']\n",
        "    view_count=items['statistics']['viewCount']\n",
        "    no_of_subcribers=items['statistics']['subscriberCount']\n",
        "    no_of_video=items['statistics']['videoCount']\n",
        "\n",
        "    mavins={'playlistid':playlistid,'title':title,'date_publlished': date_published,'view_count':view_count,'no_of_subcribers':no_of_subcribers,'no_of_video':no_of_video}\n",
        "    order.append(mavins)\n",
        "    return(pd.DataFrame(order))\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "rzVQFK4_xK95"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "this to get the overall info of the youtube channel, we use id=channelid but for username= name o\n",
        "\n",
        "f channel can be used also and same information would be gotten\n"
      ],
      "metadata": {
        "id": "UznMk3U48m2j"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "videos()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81
        },
        "id": "nVF7LgM926LB",
        "outputId": "fe3237a6-b326-4ed7-deb0-9e8cf4776794"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 playlistid         title       date_publlished view_count  \\\n",
              "0  UU2g8yvxi_X5GxyEor9L1KNA  MavinRecords  2012-04-05T19:56:59Z  612651318   \n",
              "\n",
              "  no_of_subcribers no_of_video  \n",
              "0          1610000         703  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9e4476ae-e36a-4066-8850-1239455800b9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>playlistid</th>\n",
              "      <th>title</th>\n",
              "      <th>date_publlished</th>\n",
              "      <th>view_count</th>\n",
              "      <th>no_of_subcribers</th>\n",
              "      <th>no_of_video</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>UU2g8yvxi_X5GxyEor9L1KNA</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>2012-04-05T19:56:59Z</td>\n",
              "      <td>612651318</td>\n",
              "      <td>1610000</td>\n",
              "      <td>703</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e4476ae-e36a-4066-8850-1239455800b9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9e4476ae-e36a-4066-8850-1239455800b9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9e4476ae-e36a-4066-8850-1239455800b9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "now from the above we get the information about the channel the playlist id there is the unqiue id for entire playlist and videos uploaded"
      ],
      "metadata": {
        "id": "ljsVC-Ozwpje"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "nextPageToken= None\n",
        "playlistid=[]\n",
        "while True:\n",
        "\n",
        "  apikey='AIzaSyDJbEmLwNIUc1Y6ZlCHNKeNmQykbrmZn0g'\n",
        "  channelid='UC2g8yvxi_X5GxyEor9L1KNA'\n",
        "\n",
        "  youtube=build('youtube','v3',developerKey=apikey)\n",
        "  request=youtube.playlists().list(\n",
        "  part='snippet, contentDetails',\n",
        "  channelId=channelid,\n",
        "  maxResults=50,\n",
        "  pageToken=nextPageToken\n",
        "\n",
        "  )\n",
        "  response= request.execute()\n",
        "  response\n",
        "  \n",
        "  nextPageToken=response.get('nextPageToken')\n",
        "  if not nextPageToken:\n",
        "    break\n"
      ],
      "metadata": {
        "id": "0oDnvFq2vJ9Z"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "the code above is to get the individaul playlistid and what ever information attached to it for exxample title\n"
      ],
      "metadata": {
        "id": "ear6-bAV_L2P"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "pagetoken allows us to iteerate over number of pages if the channel does not have only a page , the maximum number of info that can be gotten from a page is 50 so when calling info we also include the max since we are itterating over pages\n",
        "the nextpagetoken allows us to go to the next page if the th nextpage is  none the code breaks out of the loops since there is no page tp get information from"
      ],
      "metadata": {
        "id": "i4pFXbQy97ZI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "nextPageToken= None\n",
        "videos_ids=[]\n",
        "while True:\n",
        "\n",
        "  apikey='AIzaSyDJbEmLwNIUc1Y6ZlCHNKeNmQykbrmZn0g'\n",
        "  channelid='UC2g8yvxi_X5GxyEor9L1KNA'\n",
        "  playlistid='UU2g8yvxi_X5GxyEor9L1KNA'\n",
        "\n",
        "  youtube=build('youtube','v3',developerKey=apikey)\n",
        "  request=youtube.playlistItems().list(\n",
        "  part='snippet, contentDetails',\n",
        "  playlistId=playlistid,\n",
        "  maxResults=50,\n",
        "  pageToken=nextPageToken\n",
        "\n",
        "  )\n",
        "  response= request.execute()\n",
        "  response\n",
        "  for items in response['items']:\n",
        "    videos_ids.append(items['contentDetails']['videoId'])\n",
        "  \n",
        "  \n",
        "  nextPageToken=response.get('nextPageToken')\n",
        "  if not nextPageToken:\n",
        "    break\n"
      ],
      "metadata": {
        "id": "U2cEFHta_DHg"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "the code above uses the upload playlist id and id that every video once uplaod to the channels has and is genrall for all\n",
        "the use this upload playlistid to get the the video id for all the videos in the channel \n"
      ],
      "metadata": {
        "id": "GsHDwpXC_aAi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "apikey='AIzaSyDJbEmLwNIUc1Y6ZlCHNKeNmQykbrmZn0g'\n",
        "channelid='UC2g8yvxi_X5GxyEor9L1KNA'\n",
        "playlistid='UU2g8yvxi_X5GxyEor9L1KNA'\n",
        "\n",
        "youtube=build('youtube','v3',developerKey=apikey)\n",
        "request=youtube.playlistItems().list(\n",
        "part='snippet, contentDetails',\n",
        "playlistId=playlistid,\n",
        "maxResults=50,\n",
        "pageToken=nextPageToken\n",
        "\n",
        ")\n",
        "response= request.execute()\n",
        "response\n",
        "for items in response['items']:\n",
        "  videos_ids.append(items['contentDetails']['videoId'])\n",
        "  "
      ],
      "metadata": {
        "id": "3HfcLdMFMMx4"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(len(videos_ids))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ASCzibALVUWg",
        "outputId": "4f3fc06a-2954-4aaf-c274-31aa68676598"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "753\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "xI8vbui5VUgP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def get_video_details(youtube, videos_ids):\n",
        "  videos_info= []\n",
        "  for i in range(0, len(videos_ids), 50):\n",
        "    request = youtube.videos().list(\n",
        "    part=\"snippet,contentDetails,statistics\",\n",
        "    id=','.join(videos_ids[i:i+50])\n",
        "    )\n",
        "    response = request.execute() \n",
        "\n",
        "    for video in response['items']:\n",
        "      stats_to_keep = {'snippet': ['channelTitle', 'title', 'description', 'tags', 'publishedAt'],\n",
        "                      'statistics': ['viewCount', 'likeCount', 'favouriteCount', 'commentCount'],\n",
        "                      'contentDetails': ['duration', 'definition', 'caption']\n",
        "                      }\n",
        "      video_info = {}\n",
        "      video_info['video_id'] = video['id']\n",
        "\n",
        "      for k in stats_to_keep.keys():\n",
        "        for v in stats_to_keep[k]:\n",
        "          try:\n",
        "            video_info[v] = video[k][v]\n",
        "          except:\n",
        "            video_info[v] = None\n",
        "\n",
        "            videos_info.append(video_info)\n",
        "    \n",
        "  return pd.DataFrame(videos_info)"
      ],
      "metadata": {
        "id": "EUeyvExNOytZ"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "the code heare "
      ],
      "metadata": {
        "id": "AjlJbqYy_2jc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df=get_video_details(youtube, videos_ids)"
      ],
      "metadata": {
        "id": "txidDCbbHIjc"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['title'].nunique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tD8ZmgEUdZ1L",
        "outputId": "64665344-6f36-48af-92cd-02b21f1549f4"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "694"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['video_id'].nunique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yCZOY5QCfS3l",
        "outputId": "81764917-6656-4a55-9bba-9f00fae93d1a"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "703"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.drop(\"tags\", axis=1, inplace=True)"
      ],
      "metadata": {
        "id": "lfjw9DbrfS_T"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4m--kAAhKIGp",
        "outputId": "cf4f7db7-24c7-4e1b-ffa2-6393a8991ece"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "video_id             0\n",
              "channelTitle         0\n",
              "title                0\n",
              "description          0\n",
              "publishedAt          0\n",
              "viewCount            0\n",
              "likeCount            0\n",
              "favouriteCount    1035\n",
              "commentCount         8\n",
              "duration             0\n",
              "definition           0\n",
              "caption              0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "HkqZ9xlb3cdQ",
        "outputId": "ed2a7022-6519-48fa-85a0-1c9b25d7b6a7"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         video_id  channelTitle  \\\n",
              "0     v8SNlvR86xc  MavinRecords   \n",
              "1     v8SNlvR86xc  MavinRecords   \n",
              "2     A_09215NMNY  MavinRecords   \n",
              "3     A_09215NMNY  MavinRecords   \n",
              "4     XpqWIJEc_y0  MavinRecords   \n",
              "...           ...           ...   \n",
              "1030  ltaWs1s8yAI  MavinRecords   \n",
              "1031  6DlGH0_5Ekk  MavinRecords   \n",
              "1032  6DlGH0_5Ekk  MavinRecords   \n",
              "1033  J06lROzIedM  MavinRecords   \n",
              "1034  J06lROzIedM  MavinRecords   \n",
              "\n",
              "                                                  title  \\\n",
              "0     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "1     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "2     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "3     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "4             Boy Spyce - Nobody (Official Music Video)   \n",
              "...                                                 ...   \n",
              "1030           Ayra Starr - In Between (Official Audio)   \n",
              "1031                Ayra Starr - Toxic (Official Audio)   \n",
              "1032                Ayra Starr - Toxic (Official Audio)   \n",
              "1033               Ayra Starr - Lonely (Official Audio)   \n",
              "1034               Ayra Starr - Lonely (Official Audio)   \n",
              "\n",
              "                                            description           publishedAt  \\\n",
              "0     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...  2022-05-13T11:00:38Z   \n",
              "1     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...  2022-05-13T11:00:38Z   \n",
              "2     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...  2022-05-12T22:59:37Z   \n",
              "3     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...  2022-05-12T22:59:37Z   \n",
              "4     Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...  2022-04-15T10:00:16Z   \n",
              "...                                                 ...                   ...   \n",
              "1030  #ayrastarr #inbetween\\n \\nOfficial Audio for A...  2021-08-05T23:09:14Z   \n",
              "1031  #ayrastarr #toxic\\n \\nOfficial Audio for Ayra ...  2021-08-05T23:09:08Z   \n",
              "1032  #ayrastarr #toxic\\n \\nOfficial Audio for Ayra ...  2021-08-05T23:09:08Z   \n",
              "1033  #ayrastarr #lonely\\n \\nOfficial Audio for Ayra...  2021-08-05T23:08:48Z   \n",
              "1034  #ayrastarr #lonely\\n \\nOfficial Audio for Ayra...  2021-08-05T23:08:48Z   \n",
              "\n",
              "     viewCount likeCount favouriteCount commentCount duration definition  \\\n",
              "0      2532705     79357           None         3675  PT3M24S         hd   \n",
              "1      2532705     79357           None         3675  PT3M24S         hd   \n",
              "2       359767     12577           None          865  PT3M26S         hd   \n",
              "3       359767     12577           None          865  PT3M26S         hd   \n",
              "4       982108     26121           None          993  PT2M58S         hd   \n",
              "...        ...       ...            ...          ...      ...        ...   \n",
              "1030     48154       644           None           27  PT3M17S         sd   \n",
              "1031     68835      1105           None           45  PT2M37S         sd   \n",
              "1032     68835      1105           None           45  PT2M37S         sd   \n",
              "1033    130865      2210           None           99   PT3M9S         sd   \n",
              "1034    130865      2210           None           99   PT3M9S         sd   \n",
              "\n",
              "     caption  \n",
              "0      false  \n",
              "1      false  \n",
              "2      false  \n",
              "3      false  \n",
              "4      false  \n",
              "...      ...  \n",
              "1030   false  \n",
              "1031   false  \n",
              "1032   false  \n",
              "1033   false  \n",
              "1034   false  \n",
              "\n",
              "[1035 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6a3b0fe0-b990-4855-887f-8f0f5dd98fa7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>video_id</th>\n",
              "      <th>channelTitle</th>\n",
              "      <th>title</th>\n",
              "      <th>description</th>\n",
              "      <th>publishedAt</th>\n",
              "      <th>viewCount</th>\n",
              "      <th>likeCount</th>\n",
              "      <th>favouriteCount</th>\n",
              "      <th>commentCount</th>\n",
              "      <th>duration</th>\n",
              "      <th>definition</th>\n",
              "      <th>caption</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>v8SNlvR86xc</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-13T11:00:38Z</td>\n",
              "      <td>2532705</td>\n",
              "      <td>79357</td>\n",
              "      <td>None</td>\n",
              "      <td>3675</td>\n",
              "      <td>PT3M24S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>v8SNlvR86xc</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-13T11:00:38Z</td>\n",
              "      <td>2532705</td>\n",
              "      <td>79357</td>\n",
              "      <td>None</td>\n",
              "      <td>3675</td>\n",
              "      <td>PT3M24S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A_09215NMNY</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-12T22:59:37Z</td>\n",
              "      <td>359767</td>\n",
              "      <td>12577</td>\n",
              "      <td>None</td>\n",
              "      <td>865</td>\n",
              "      <td>PT3M26S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A_09215NMNY</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-12T22:59:37Z</td>\n",
              "      <td>359767</td>\n",
              "      <td>12577</td>\n",
              "      <td>None</td>\n",
              "      <td>865</td>\n",
              "      <td>PT3M26S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>XpqWIJEc_y0</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Boy Spyce - Nobody (Official Music Video)</td>\n",
              "      <td>Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...</td>\n",
              "      <td>2022-04-15T10:00:16Z</td>\n",
              "      <td>982108</td>\n",
              "      <td>26121</td>\n",
              "      <td>None</td>\n",
              "      <td>993</td>\n",
              "      <td>PT2M58S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1030</th>\n",
              "      <td>ltaWs1s8yAI</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Ayra Starr - In Between (Official Audio)</td>\n",
              "      <td>#ayrastarr #inbetween\\n \\nOfficial Audio for A...</td>\n",
              "      <td>2021-08-05T23:09:14Z</td>\n",
              "      <td>48154</td>\n",
              "      <td>644</td>\n",
              "      <td>None</td>\n",
              "      <td>27</td>\n",
              "      <td>PT3M17S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1031</th>\n",
              "      <td>6DlGH0_5Ekk</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Ayra Starr - Toxic (Official Audio)</td>\n",
              "      <td>#ayrastarr #toxic\\n \\nOfficial Audio for Ayra ...</td>\n",
              "      <td>2021-08-05T23:09:08Z</td>\n",
              "      <td>68835</td>\n",
              "      <td>1105</td>\n",
              "      <td>None</td>\n",
              "      <td>45</td>\n",
              "      <td>PT2M37S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1032</th>\n",
              "      <td>6DlGH0_5Ekk</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Ayra Starr - Toxic (Official Audio)</td>\n",
              "      <td>#ayrastarr #toxic\\n \\nOfficial Audio for Ayra ...</td>\n",
              "      <td>2021-08-05T23:09:08Z</td>\n",
              "      <td>68835</td>\n",
              "      <td>1105</td>\n",
              "      <td>None</td>\n",
              "      <td>45</td>\n",
              "      <td>PT2M37S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1033</th>\n",
              "      <td>J06lROzIedM</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Ayra Starr - Lonely (Official Audio)</td>\n",
              "      <td>#ayrastarr #lonely\\n \\nOfficial Audio for Ayra...</td>\n",
              "      <td>2021-08-05T23:08:48Z</td>\n",
              "      <td>130865</td>\n",
              "      <td>2210</td>\n",
              "      <td>None</td>\n",
              "      <td>99</td>\n",
              "      <td>PT3M9S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1034</th>\n",
              "      <td>J06lROzIedM</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Ayra Starr - Lonely (Official Audio)</td>\n",
              "      <td>#ayrastarr #lonely\\n \\nOfficial Audio for Ayra...</td>\n",
              "      <td>2021-08-05T23:08:48Z</td>\n",
              "      <td>130865</td>\n",
              "      <td>2210</td>\n",
              "      <td>None</td>\n",
              "      <td>99</td>\n",
              "      <td>PT3M9S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1035 rows × 12 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a3b0fe0-b990-4855-887f-8f0f5dd98fa7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6a3b0fe0-b990-4855-887f-8f0f5dd98fa7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6a3b0fe0-b990-4855-887f-8f0f5dd98fa7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AGch_ykdKUtt",
        "outputId": "a15782ba-4516-4b64-abca-1a67da5bfa40"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "video_id          object\n",
              "channelTitle      object\n",
              "title             object\n",
              "description       object\n",
              "publishedAt       object\n",
              "viewCount         object\n",
              "likeCount         object\n",
              "favouriteCount    object\n",
              "commentCount      object\n",
              "duration          object\n",
              "definition        object\n",
              "caption           object\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eIr3UL_2KU0-",
        "outputId": "6e4d5f94-4ce6-473d-b012-f4601fdb9067"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1035 entries, 0 to 1034\n",
            "Data columns (total 12 columns):\n",
            " #   Column          Non-Null Count  Dtype \n",
            "---  ------          --------------  ----- \n",
            " 0   video_id        1035 non-null   object\n",
            " 1   channelTitle    1035 non-null   object\n",
            " 2   title           1035 non-null   object\n",
            " 3   description     1035 non-null   object\n",
            " 4   publishedAt     1035 non-null   object\n",
            " 5   viewCount       1035 non-null   object\n",
            " 6   likeCount       1035 non-null   object\n",
            " 7   favouriteCount  0 non-null      object\n",
            " 8   commentCount    1027 non-null   object\n",
            " 9   duration        1035 non-null   object\n",
            " 10  definition      1035 non-null   object\n",
            " 11  caption         1035 non-null   object\n",
            "dtypes: object(12)\n",
            "memory usage: 97.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.fillna(0 ,inplace=True)"
      ],
      "metadata": {
        "id": "TJNtTHB7gWsD"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "for proper analysis we replace any column haing null values to 0 \n",
        "the inplace =True makes the o[peration permanent\n"
      ],
      "metadata": {
        "id": "Yv5y0qO2BgSS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "nfTt1rhO5v1H",
        "outputId": "97e3e618-dbf7-44f1-91e6-95bae335a007"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         video_id  channelTitle  \\\n",
              "0     v8SNlvR86xc  MavinRecords   \n",
              "1     v8SNlvR86xc  MavinRecords   \n",
              "2     A_09215NMNY  MavinRecords   \n",
              "3     A_09215NMNY  MavinRecords   \n",
              "4     XpqWIJEc_y0  MavinRecords   \n",
              "...           ...           ...   \n",
              "1030  ltaWs1s8yAI  MavinRecords   \n",
              "1031  6DlGH0_5Ekk  MavinRecords   \n",
              "1032  6DlGH0_5Ekk  MavinRecords   \n",
              "1033  J06lROzIedM  MavinRecords   \n",
              "1034  J06lROzIedM  MavinRecords   \n",
              "\n",
              "                                                  title  \\\n",
              "0     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "1     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "2     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "3     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "4             Boy Spyce - Nobody (Official Music Video)   \n",
              "...                                                 ...   \n",
              "1030           Ayra Starr - In Between (Official Audio)   \n",
              "1031                Ayra Starr - Toxic (Official Audio)   \n",
              "1032                Ayra Starr - Toxic (Official Audio)   \n",
              "1033               Ayra Starr - Lonely (Official Audio)   \n",
              "1034               Ayra Starr - Lonely (Official Audio)   \n",
              "\n",
              "                                            description           publishedAt  \\\n",
              "0     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...  2022-05-13T11:00:38Z   \n",
              "1     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...  2022-05-13T11:00:38Z   \n",
              "2     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...  2022-05-12T22:59:37Z   \n",
              "3     Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...  2022-05-12T22:59:37Z   \n",
              "4     Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...  2022-04-15T10:00:16Z   \n",
              "...                                                 ...                   ...   \n",
              "1030  #ayrastarr #inbetween\\n \\nOfficial Audio for A...  2021-08-05T23:09:14Z   \n",
              "1031  #ayrastarr #toxic\\n \\nOfficial Audio for Ayra ...  2021-08-05T23:09:08Z   \n",
              "1032  #ayrastarr #toxic\\n \\nOfficial Audio for Ayra ...  2021-08-05T23:09:08Z   \n",
              "1033  #ayrastarr #lonely\\n \\nOfficial Audio for Ayra...  2021-08-05T23:08:48Z   \n",
              "1034  #ayrastarr #lonely\\n \\nOfficial Audio for Ayra...  2021-08-05T23:08:48Z   \n",
              "\n",
              "     viewCount likeCount  favouriteCount commentCount duration definition  \\\n",
              "0      2532705     79357               0         3675  PT3M24S         hd   \n",
              "1      2532705     79357               0         3675  PT3M24S         hd   \n",
              "2       359767     12577               0          865  PT3M26S         hd   \n",
              "3       359767     12577               0          865  PT3M26S         hd   \n",
              "4       982108     26121               0          993  PT2M58S         hd   \n",
              "...        ...       ...             ...          ...      ...        ...   \n",
              "1030     48154       644               0           27  PT3M17S         sd   \n",
              "1031     68835      1105               0           45  PT2M37S         sd   \n",
              "1032     68835      1105               0           45  PT2M37S         sd   \n",
              "1033    130865      2210               0           99   PT3M9S         sd   \n",
              "1034    130865      2210               0           99   PT3M9S         sd   \n",
              "\n",
              "     caption  \n",
              "0      false  \n",
              "1      false  \n",
              "2      false  \n",
              "3      false  \n",
              "4      false  \n",
              "...      ...  \n",
              "1030   false  \n",
              "1031   false  \n",
              "1032   false  \n",
              "1033   false  \n",
              "1034   false  \n",
              "\n",
              "[1035 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-26ab0949-3981-41fa-828b-d68c5deaf9c9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>video_id</th>\n",
              "      <th>channelTitle</th>\n",
              "      <th>title</th>\n",
              "      <th>description</th>\n",
              "      <th>publishedAt</th>\n",
              "      <th>viewCount</th>\n",
              "      <th>likeCount</th>\n",
              "      <th>favouriteCount</th>\n",
              "      <th>commentCount</th>\n",
              "      <th>duration</th>\n",
              "      <th>definition</th>\n",
              "      <th>caption</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>v8SNlvR86xc</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-13T11:00:38Z</td>\n",
              "      <td>2532705</td>\n",
              "      <td>79357</td>\n",
              "      <td>0</td>\n",
              "      <td>3675</td>\n",
              "      <td>PT3M24S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>v8SNlvR86xc</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-13T11:00:38Z</td>\n",
              "      <td>2532705</td>\n",
              "      <td>79357</td>\n",
              "      <td>0</td>\n",
              "      <td>3675</td>\n",
              "      <td>PT3M24S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A_09215NMNY</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-12T22:59:37Z</td>\n",
              "      <td>359767</td>\n",
              "      <td>12577</td>\n",
              "      <td>0</td>\n",
              "      <td>865</td>\n",
              "      <td>PT3M26S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A_09215NMNY</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-12T22:59:37Z</td>\n",
              "      <td>359767</td>\n",
              "      <td>12577</td>\n",
              "      <td>0</td>\n",
              "      <td>865</td>\n",
              "      <td>PT3M26S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>XpqWIJEc_y0</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Boy Spyce - Nobody (Official Music Video)</td>\n",
              "      <td>Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...</td>\n",
              "      <td>2022-04-15T10:00:16Z</td>\n",
              "      <td>982108</td>\n",
              "      <td>26121</td>\n",
              "      <td>0</td>\n",
              "      <td>993</td>\n",
              "      <td>PT2M58S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1030</th>\n",
              "      <td>ltaWs1s8yAI</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Ayra Starr - In Between (Official Audio)</td>\n",
              "      <td>#ayrastarr #inbetween\\n \\nOfficial Audio for A...</td>\n",
              "      <td>2021-08-05T23:09:14Z</td>\n",
              "      <td>48154</td>\n",
              "      <td>644</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>PT3M17S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1031</th>\n",
              "      <td>6DlGH0_5Ekk</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Ayra Starr - Toxic (Official Audio)</td>\n",
              "      <td>#ayrastarr #toxic\\n \\nOfficial Audio for Ayra ...</td>\n",
              "      <td>2021-08-05T23:09:08Z</td>\n",
              "      <td>68835</td>\n",
              "      <td>1105</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>PT2M37S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1032</th>\n",
              "      <td>6DlGH0_5Ekk</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Ayra Starr - Toxic (Official Audio)</td>\n",
              "      <td>#ayrastarr #toxic\\n \\nOfficial Audio for Ayra ...</td>\n",
              "      <td>2021-08-05T23:09:08Z</td>\n",
              "      <td>68835</td>\n",
              "      <td>1105</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>PT2M37S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1033</th>\n",
              "      <td>J06lROzIedM</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Ayra Starr - Lonely (Official Audio)</td>\n",
              "      <td>#ayrastarr #lonely\\n \\nOfficial Audio for Ayra...</td>\n",
              "      <td>2021-08-05T23:08:48Z</td>\n",
              "      <td>130865</td>\n",
              "      <td>2210</td>\n",
              "      <td>0</td>\n",
              "      <td>99</td>\n",
              "      <td>PT3M9S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1034</th>\n",
              "      <td>J06lROzIedM</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Ayra Starr - Lonely (Official Audio)</td>\n",
              "      <td>#ayrastarr #lonely\\n \\nOfficial Audio for Ayra...</td>\n",
              "      <td>2021-08-05T23:08:48Z</td>\n",
              "      <td>130865</td>\n",
              "      <td>2210</td>\n",
              "      <td>0</td>\n",
              "      <td>99</td>\n",
              "      <td>PT3M9S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1035 rows × 12 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-26ab0949-3981-41fa-828b-d68c5deaf9c9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-26ab0949-3981-41fa-828b-d68c5deaf9c9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-26ab0949-3981-41fa-828b-d68c5deaf9c9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.drop_duplicates(inplace=True)"
      ],
      "metadata": {
        "id": "xGCO_adZyTm1"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df[['likeCount','viewCount','commentCount','favouriteCount']]=df[['likeCount','viewCount','commentCount','favouriteCount']].apply(pd.to_numeric)"
      ],
      "metadata": {
        "id": "HlVqFzRY7vY1"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PeA7q6_m9isO",
        "outputId": "06d54b69-54e3-4929-8d85-b3ac8e5e768e"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "video_id          object\n",
              "channelTitle      object\n",
              "title             object\n",
              "description       object\n",
              "publishedAt       object\n",
              "viewCount          int64\n",
              "likeCount          int64\n",
              "favouriteCount     int64\n",
              "commentCount       int64\n",
              "duration          object\n",
              "definition        object\n",
              "caption           object\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[['video_id','channelTitle','description','definition','caption','title','publishedAt','duration']]=df[['video_id','channelTitle','description','definition','caption','title','publishedAt','duration']].astype(str)"
      ],
      "metadata": {
        "id": "Bw3HjWKf90eu"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a72C9NdNAZdD",
        "outputId": "4daa8624-52da-4075-a91f-ce157cabc235"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "video_id          object\n",
              "channelTitle      object\n",
              "title             object\n",
              "description       object\n",
              "publishedAt       object\n",
              "viewCount          int64\n",
              "likeCount          int64\n",
              "favouriteCount     int64\n",
              "commentCount       int64\n",
              "duration          object\n",
              "definition        object\n",
              "caption           object\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "from the above we converted the column data types to appropriate data types for analysis\n"
      ],
      "metadata": {
        "id": "pBOKGf5NBP1g"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 971
        },
        "id": "O_PynaEAzqMS",
        "outputId": "f6036fc7-b749-4649-ad3f-097d1fe7e8c2"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        video_id  channelTitle  \\\n",
              "0    v8SNlvR86xc  MavinRecords   \n",
              "2    A_09215NMNY  MavinRecords   \n",
              "4    XpqWIJEc_y0  MavinRecords   \n",
              "6    NwuOq8mItY4  MavinRecords   \n",
              "8    tAPa04I6ZqE  MavinRecords   \n",
              "..           ...           ...   \n",
              "931  CNGerr9vGw0  MavinRecords   \n",
              "932  ZBsC9N6VtZs  MavinRecords   \n",
              "933  -WSm_faUpOY  MavinRecords   \n",
              "934  WZX17AYrYY4  MavinRecords   \n",
              "935  v8SNlvR86xc  MavinRecords   \n",
              "\n",
              "                                                 title  \\\n",
              "0    Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "2    Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "4            Boy Spyce - Nobody (Official Music Video)   \n",
              "6            Boy Spyce - Nobody (Official Lyric Audio)   \n",
              "8        Boy Spyce - Bad Things (Official Lyric Audio)   \n",
              "..                                                 ...   \n",
              "931                                 Chocolate - Dr SID   \n",
              "932                                      YOLO - Dr SID   \n",
              "933                               Oma Ga - Tiwa Savage   \n",
              "934                               Forever - Wande Coal   \n",
              "935  Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "\n",
              "                                           description           publishedAt  \\\n",
              "0    Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...  2022-05-13T11:00:38Z   \n",
              "2    Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...  2022-05-12T22:59:37Z   \n",
              "4    Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...  2022-04-15T10:00:16Z   \n",
              "6    Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...  2022-04-14T23:04:51Z   \n",
              "8    Boy Spyce - Bad Things\\nStream BOY SPYCE EP: h...  2022-04-14T23:04:48Z   \n",
              "..                                                 ...                   ...   \n",
              "931  Song by Dr SID off MAVIN Records' Solar Plexus...  2012-05-08T01:12:29Z   \n",
              "932  Song by Dr SID off MAVIN Records' Solar Plexus...  2012-05-08T01:12:20Z   \n",
              "933  Song by Tiwa Savage off MAVIN Records' Solar P...  2012-05-08T00:07:18Z   \n",
              "934  Song by Wande Coal off MAVIN Records' Solar Pl...  2012-05-08T00:01:04Z   \n",
              "935  Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...  2022-05-13T11:00:38Z   \n",
              "\n",
              "     viewCount  likeCount  favouriteCount  commentCount duration definition  \\\n",
              "0      2532705      79357               0          3675  PT3M24S         hd   \n",
              "2       359767      12577               0           865  PT3M26S         hd   \n",
              "4       982108      26121               0           993  PT2M58S         hd   \n",
              "6        42359       1310               0            54  PT2M42S         hd   \n",
              "8        62306       2232               0           126  PT2M51S         hd   \n",
              "..         ...        ...             ...           ...      ...        ...   \n",
              "931      60168        266               0            50  PT3M26S         sd   \n",
              "932     129386        651               0            95  PT3M31S         sd   \n",
              "933     438116       1210               0           216  PT3M31S         hd   \n",
              "934     113617        478               0            83  PT4M19S         sd   \n",
              "935    2532705      79358               0          3675  PT3M24S         hd   \n",
              "\n",
              "    caption  \n",
              "0     false  \n",
              "2     false  \n",
              "4     false  \n",
              "6     false  \n",
              "8     false  \n",
              "..      ...  \n",
              "931   false  \n",
              "932   false  \n",
              "933   false  \n",
              "934   false  \n",
              "935   false  \n",
              "\n",
              "[704 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4e84ed49-1986-4a58-bd7b-fdb2d0a57e70\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>video_id</th>\n",
              "      <th>channelTitle</th>\n",
              "      <th>title</th>\n",
              "      <th>description</th>\n",
              "      <th>publishedAt</th>\n",
              "      <th>viewCount</th>\n",
              "      <th>likeCount</th>\n",
              "      <th>favouriteCount</th>\n",
              "      <th>commentCount</th>\n",
              "      <th>duration</th>\n",
              "      <th>definition</th>\n",
              "      <th>caption</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>v8SNlvR86xc</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-13T11:00:38Z</td>\n",
              "      <td>2532705</td>\n",
              "      <td>79357</td>\n",
              "      <td>0</td>\n",
              "      <td>3675</td>\n",
              "      <td>PT3M24S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A_09215NMNY</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-12T22:59:37Z</td>\n",
              "      <td>359767</td>\n",
              "      <td>12577</td>\n",
              "      <td>0</td>\n",
              "      <td>865</td>\n",
              "      <td>PT3M26S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>XpqWIJEc_y0</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Boy Spyce - Nobody (Official Music Video)</td>\n",
              "      <td>Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...</td>\n",
              "      <td>2022-04-15T10:00:16Z</td>\n",
              "      <td>982108</td>\n",
              "      <td>26121</td>\n",
              "      <td>0</td>\n",
              "      <td>993</td>\n",
              "      <td>PT2M58S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>NwuOq8mItY4</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Boy Spyce - Nobody (Official Lyric Audio)</td>\n",
              "      <td>Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...</td>\n",
              "      <td>2022-04-14T23:04:51Z</td>\n",
              "      <td>42359</td>\n",
              "      <td>1310</td>\n",
              "      <td>0</td>\n",
              "      <td>54</td>\n",
              "      <td>PT2M42S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>tAPa04I6ZqE</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Boy Spyce - Bad Things (Official Lyric Audio)</td>\n",
              "      <td>Boy Spyce - Bad Things\\nStream BOY SPYCE EP: h...</td>\n",
              "      <td>2022-04-14T23:04:48Z</td>\n",
              "      <td>62306</td>\n",
              "      <td>2232</td>\n",
              "      <td>0</td>\n",
              "      <td>126</td>\n",
              "      <td>PT2M51S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>931</th>\n",
              "      <td>CNGerr9vGw0</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Chocolate - Dr SID</td>\n",
              "      <td>Song by Dr SID off MAVIN Records' Solar Plexus...</td>\n",
              "      <td>2012-05-08T01:12:29Z</td>\n",
              "      <td>60168</td>\n",
              "      <td>266</td>\n",
              "      <td>0</td>\n",
              "      <td>50</td>\n",
              "      <td>PT3M26S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>932</th>\n",
              "      <td>ZBsC9N6VtZs</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>YOLO - Dr SID</td>\n",
              "      <td>Song by Dr SID off MAVIN Records' Solar Plexus...</td>\n",
              "      <td>2012-05-08T01:12:20Z</td>\n",
              "      <td>129386</td>\n",
              "      <td>651</td>\n",
              "      <td>0</td>\n",
              "      <td>95</td>\n",
              "      <td>PT3M31S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>933</th>\n",
              "      <td>-WSm_faUpOY</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Oma Ga - Tiwa Savage</td>\n",
              "      <td>Song by Tiwa Savage off MAVIN Records' Solar P...</td>\n",
              "      <td>2012-05-08T00:07:18Z</td>\n",
              "      <td>438116</td>\n",
              "      <td>1210</td>\n",
              "      <td>0</td>\n",
              "      <td>216</td>\n",
              "      <td>PT3M31S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>934</th>\n",
              "      <td>WZX17AYrYY4</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Forever - Wande Coal</td>\n",
              "      <td>Song by Wande Coal off MAVIN Records' Solar Pl...</td>\n",
              "      <td>2012-05-08T00:01:04Z</td>\n",
              "      <td>113617</td>\n",
              "      <td>478</td>\n",
              "      <td>0</td>\n",
              "      <td>83</td>\n",
              "      <td>PT4M19S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>935</th>\n",
              "      <td>v8SNlvR86xc</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-13T11:00:38Z</td>\n",
              "      <td>2532705</td>\n",
              "      <td>79358</td>\n",
              "      <td>0</td>\n",
              "      <td>3675</td>\n",
              "      <td>PT3M24S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>704 rows × 12 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e84ed49-1986-4a58-bd7b-fdb2d0a57e70')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4e84ed49-1986-4a58-bd7b-fdb2d0a57e70 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4e84ed49-1986-4a58-bd7b-fdb2d0a57e70');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from dateutil import parser\n",
        "import datetime"
      ],
      "metadata": {
        "id": "tpko4_jH9hYX"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['publishedAt'] = df['publishedAt'].apply(lambda x: parser.parse(x)) "
      ],
      "metadata": {
        "id": "XgP_Bhq72RBI"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        ""
      ],
      "metadata": {
        "id": "eZGAP3JtBmZL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['publishedAt']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Cw0vG_ul9ldI",
        "outputId": "91e48672-efef-4458-db88-aa0e279ff05f"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0     2022-05-13 11:00:38+00:00\n",
              "2     2022-05-12 22:59:37+00:00\n",
              "4     2022-04-15 10:00:16+00:00\n",
              "6     2022-04-14 23:04:51+00:00\n",
              "8     2022-04-14 23:04:48+00:00\n",
              "                 ...           \n",
              "931   2012-05-08 01:12:29+00:00\n",
              "932   2012-05-08 01:12:20+00:00\n",
              "933   2012-05-08 00:07:18+00:00\n",
              "934   2012-05-08 00:01:04+00:00\n",
              "935   2022-05-13 11:00:38+00:00\n",
              "Name: publishedAt, Length: 704, dtype: datetime64[ns, tzlocal()]"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Release_Time'] = df['publishedAt'].apply(lambda x: x.strftime(\"%H:%M:%S\")) \n",
        "df['Release_Time'] = pd.to_datetime(df['Release_Time'], format='%H:%M:%S')\n"
      ],
      "metadata": {
        "id": "_gve-h7u-BFI"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['Release_Month']=df['publishedAt'].apply(lambda x: x.strftime(\"%B\")) "
      ],
      "metadata": {
        "id": "DhjYRv6w-Uru"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df[' Release_Day']=df['publishedAt'].apply(lambda x: x.strftime(\"%A\")) "
      ],
      "metadata": {
        "id": "bKIJzdogDn-8"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['Date']=df['publishedAt'].apply(lambda x: x.strftime(\"%Y:%m:%d\")) \n",
        "df[\"Date\"] = pd.to_datetime(df[\"Date\"], format='%Y:%m:%d')"
      ],
      "metadata": {
        "id": "Uw5maTks9qQF"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pip install isodate"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Jl-SebYFleRL",
        "outputId": "3dd6dc72-bea8-45c8-adb8-7ae03977ac8d"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting isodate\n",
            "  Downloading isodate-0.6.1-py2.py3-none-any.whl (41 kB)\n",
            "\u001b[K     |████████████████████████████████| 41 kB 343 kB/s \n",
            "\u001b[?25hRequirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from isodate) (1.15.0)\n",
            "Installing collected packages: isodate\n",
            "Successfully installed isodate-0.6.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import isodate\n",
        "df['TotalSecs'] = df['duration'].apply(lambda x: isodate.parse_duration(x))\n",
        "df['TotalSecs'] = df['TotalSecs'].astype('timedelta64[s]')"
      ],
      "metadata": {
        "id": "K-qsUJwbkO58"
      },
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "y9_R9nfQKPxX",
        "outputId": "6cfe773d-79cb-4379-cf9b-ae0bdc8328b8"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        video_id  channelTitle  \\\n",
              "0    v8SNlvR86xc  MavinRecords   \n",
              "2    A_09215NMNY  MavinRecords   \n",
              "4    XpqWIJEc_y0  MavinRecords   \n",
              "6    NwuOq8mItY4  MavinRecords   \n",
              "8    tAPa04I6ZqE  MavinRecords   \n",
              "..           ...           ...   \n",
              "931  CNGerr9vGw0  MavinRecords   \n",
              "932  ZBsC9N6VtZs  MavinRecords   \n",
              "933  -WSm_faUpOY  MavinRecords   \n",
              "934  WZX17AYrYY4  MavinRecords   \n",
              "935  v8SNlvR86xc  MavinRecords   \n",
              "\n",
              "                                                 title  \\\n",
              "0    Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "2    Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "4            Boy Spyce - Nobody (Official Music Video)   \n",
              "6            Boy Spyce - Nobody (Official Lyric Audio)   \n",
              "8        Boy Spyce - Bad Things (Official Lyric Audio)   \n",
              "..                                                 ...   \n",
              "931                                 Chocolate - Dr SID   \n",
              "932                                      YOLO - Dr SID   \n",
              "933                               Oma Ga - Tiwa Savage   \n",
              "934                               Forever - Wande Coal   \n",
              "935  Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "\n",
              "                                           description  \\\n",
              "0    Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "2    Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "4    Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...   \n",
              "6    Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...   \n",
              "8    Boy Spyce - Bad Things\\nStream BOY SPYCE EP: h...   \n",
              "..                                                 ...   \n",
              "931  Song by Dr SID off MAVIN Records' Solar Plexus...   \n",
              "932  Song by Dr SID off MAVIN Records' Solar Plexus...   \n",
              "933  Song by Tiwa Savage off MAVIN Records' Solar P...   \n",
              "934  Song by Wande Coal off MAVIN Records' Solar Pl...   \n",
              "935  Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "\n",
              "                  publishedAt  viewCount  likeCount  favouriteCount  \\\n",
              "0   2022-05-13 11:00:38+00:00    2532705      79357               0   \n",
              "2   2022-05-12 22:59:37+00:00     359767      12577               0   \n",
              "4   2022-04-15 10:00:16+00:00     982108      26121               0   \n",
              "6   2022-04-14 23:04:51+00:00      42359       1310               0   \n",
              "8   2022-04-14 23:04:48+00:00      62306       2232               0   \n",
              "..                        ...        ...        ...             ...   \n",
              "931 2012-05-08 01:12:29+00:00      60168        266               0   \n",
              "932 2012-05-08 01:12:20+00:00     129386        651               0   \n",
              "933 2012-05-08 00:07:18+00:00     438116       1210               0   \n",
              "934 2012-05-08 00:01:04+00:00     113617        478               0   \n",
              "935 2022-05-13 11:00:38+00:00    2532705      79358               0   \n",
              "\n",
              "     commentCount duration definition caption        Release_Time  \\\n",
              "0            3675  PT3M24S         hd   false 1900-01-01 11:00:38   \n",
              "2             865  PT3M26S         hd   false 1900-01-01 22:59:37   \n",
              "4             993  PT2M58S         hd   false 1900-01-01 10:00:16   \n",
              "6              54  PT2M42S         hd   false 1900-01-01 23:04:51   \n",
              "8             126  PT2M51S         hd   false 1900-01-01 23:04:48   \n",
              "..            ...      ...        ...     ...                 ...   \n",
              "931            50  PT3M26S         sd   false 1900-01-01 01:12:29   \n",
              "932            95  PT3M31S         sd   false 1900-01-01 01:12:20   \n",
              "933           216  PT3M31S         hd   false 1900-01-01 00:07:18   \n",
              "934            83  PT4M19S         sd   false 1900-01-01 00:01:04   \n",
              "935          3675  PT3M24S         hd   false 1900-01-01 11:00:38   \n",
              "\n",
              "    Release_Month  Release_Day       Date  TotalSecs  \n",
              "0             May       Friday 2022-05-13      204.0  \n",
              "2             May     Thursday 2022-05-12      206.0  \n",
              "4           April       Friday 2022-04-15      178.0  \n",
              "6           April     Thursday 2022-04-14      162.0  \n",
              "8           April     Thursday 2022-04-14      171.0  \n",
              "..            ...          ...        ...        ...  \n",
              "931           May      Tuesday 2012-05-08      206.0  \n",
              "932           May      Tuesday 2012-05-08      211.0  \n",
              "933           May      Tuesday 2012-05-08      211.0  \n",
              "934           May      Tuesday 2012-05-08      259.0  \n",
              "935           May       Friday 2022-05-13      204.0  \n",
              "\n",
              "[704 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dcf7e696-3262-46fa-8ef5-e0b39143b9cf\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>video_id</th>\n",
              "      <th>channelTitle</th>\n",
              "      <th>title</th>\n",
              "      <th>description</th>\n",
              "      <th>publishedAt</th>\n",
              "      <th>viewCount</th>\n",
              "      <th>likeCount</th>\n",
              "      <th>favouriteCount</th>\n",
              "      <th>commentCount</th>\n",
              "      <th>duration</th>\n",
              "      <th>definition</th>\n",
              "      <th>caption</th>\n",
              "      <th>Release_Time</th>\n",
              "      <th>Release_Month</th>\n",
              "      <th>Release_Day</th>\n",
              "      <th>Date</th>\n",
              "      <th>TotalSecs</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>v8SNlvR86xc</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-13 11:00:38+00:00</td>\n",
              "      <td>2532705</td>\n",
              "      <td>79357</td>\n",
              "      <td>0</td>\n",
              "      <td>3675</td>\n",
              "      <td>PT3M24S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 11:00:38</td>\n",
              "      <td>May</td>\n",
              "      <td>Friday</td>\n",
              "      <td>2022-05-13</td>\n",
              "      <td>204.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A_09215NMNY</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-12 22:59:37+00:00</td>\n",
              "      <td>359767</td>\n",
              "      <td>12577</td>\n",
              "      <td>0</td>\n",
              "      <td>865</td>\n",
              "      <td>PT3M26S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 22:59:37</td>\n",
              "      <td>May</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>2022-05-12</td>\n",
              "      <td>206.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>XpqWIJEc_y0</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Boy Spyce - Nobody (Official Music Video)</td>\n",
              "      <td>Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...</td>\n",
              "      <td>2022-04-15 10:00:16+00:00</td>\n",
              "      <td>982108</td>\n",
              "      <td>26121</td>\n",
              "      <td>0</td>\n",
              "      <td>993</td>\n",
              "      <td>PT2M58S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 10:00:16</td>\n",
              "      <td>April</td>\n",
              "      <td>Friday</td>\n",
              "      <td>2022-04-15</td>\n",
              "      <td>178.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>NwuOq8mItY4</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Boy Spyce - Nobody (Official Lyric Audio)</td>\n",
              "      <td>Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...</td>\n",
              "      <td>2022-04-14 23:04:51+00:00</td>\n",
              "      <td>42359</td>\n",
              "      <td>1310</td>\n",
              "      <td>0</td>\n",
              "      <td>54</td>\n",
              "      <td>PT2M42S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 23:04:51</td>\n",
              "      <td>April</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>2022-04-14</td>\n",
              "      <td>162.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>tAPa04I6ZqE</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Boy Spyce - Bad Things (Official Lyric Audio)</td>\n",
              "      <td>Boy Spyce - Bad Things\\nStream BOY SPYCE EP: h...</td>\n",
              "      <td>2022-04-14 23:04:48+00:00</td>\n",
              "      <td>62306</td>\n",
              "      <td>2232</td>\n",
              "      <td>0</td>\n",
              "      <td>126</td>\n",
              "      <td>PT2M51S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 23:04:48</td>\n",
              "      <td>April</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>2022-04-14</td>\n",
              "      <td>171.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>931</th>\n",
              "      <td>CNGerr9vGw0</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Chocolate - Dr SID</td>\n",
              "      <td>Song by Dr SID off MAVIN Records' Solar Plexus...</td>\n",
              "      <td>2012-05-08 01:12:29+00:00</td>\n",
              "      <td>60168</td>\n",
              "      <td>266</td>\n",
              "      <td>0</td>\n",
              "      <td>50</td>\n",
              "      <td>PT3M26S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 01:12:29</td>\n",
              "      <td>May</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>2012-05-08</td>\n",
              "      <td>206.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>932</th>\n",
              "      <td>ZBsC9N6VtZs</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>YOLO - Dr SID</td>\n",
              "      <td>Song by Dr SID off MAVIN Records' Solar Plexus...</td>\n",
              "      <td>2012-05-08 01:12:20+00:00</td>\n",
              "      <td>129386</td>\n",
              "      <td>651</td>\n",
              "      <td>0</td>\n",
              "      <td>95</td>\n",
              "      <td>PT3M31S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 01:12:20</td>\n",
              "      <td>May</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>2012-05-08</td>\n",
              "      <td>211.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>933</th>\n",
              "      <td>-WSm_faUpOY</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Oma Ga - Tiwa Savage</td>\n",
              "      <td>Song by Tiwa Savage off MAVIN Records' Solar P...</td>\n",
              "      <td>2012-05-08 00:07:18+00:00</td>\n",
              "      <td>438116</td>\n",
              "      <td>1210</td>\n",
              "      <td>0</td>\n",
              "      <td>216</td>\n",
              "      <td>PT3M31S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 00:07:18</td>\n",
              "      <td>May</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>2012-05-08</td>\n",
              "      <td>211.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>934</th>\n",
              "      <td>WZX17AYrYY4</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Forever - Wande Coal</td>\n",
              "      <td>Song by Wande Coal off MAVIN Records' Solar Pl...</td>\n",
              "      <td>2012-05-08 00:01:04+00:00</td>\n",
              "      <td>113617</td>\n",
              "      <td>478</td>\n",
              "      <td>0</td>\n",
              "      <td>83</td>\n",
              "      <td>PT4M19S</td>\n",
              "      <td>sd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 00:01:04</td>\n",
              "      <td>May</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>2012-05-08</td>\n",
              "      <td>259.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>935</th>\n",
              "      <td>v8SNlvR86xc</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-13 11:00:38+00:00</td>\n",
              "      <td>2532705</td>\n",
              "      <td>79358</td>\n",
              "      <td>0</td>\n",
              "      <td>3675</td>\n",
              "      <td>PT3M24S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 11:00:38</td>\n",
              "      <td>May</td>\n",
              "      <td>Friday</td>\n",
              "      <td>2022-05-13</td>\n",
              "      <td>204.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>704 rows × 17 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcf7e696-3262-46fa-8ef5-e0b39143b9cf')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-dcf7e696-3262-46fa-8ef5-e0b39143b9cf button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-dcf7e696-3262-46fa-8ef5-e0b39143b9cf');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "7C_NZysrUTSk"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "importing visualization libraries"
      ],
      "metadata": {
        "id": "EJ_HX5CdZJ-S"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "plt.figure(figsize=(15,4))\n",
        "plt.bar(df['Release_Month'],df['likeCount'] )\n",
        "plt.xticks(rotation=90)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "QdQw5LYJPO2L",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 321
        },
        "outputId": "6187ae31-fd48-4e00-f7a6-2c68b2081811"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = sns.barplot(x=\"definition\", y=\"commentCount\", data=df,\n",
        "                 order=[\"sd\", \"hd\"])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "lMaYu7wm1-w2",
        "outputId": "bae4ac33-89bb-44ed-a562-ef55a0cd4755"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYUAAAEGCAYAAACKB4k+AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAU1ElEQVR4nO3df/BddX3n8efLgAKWLdJ8hZBAQ910HbQS9CuwVWcUqwVGDbbKwLRCWdZ0O9gtu1oW3R2lbJmpgFBtu8yG8tNqBRXWyCIVkVWZqWDC70DRLD8KMV8Iv0G6tIH3/nFPjpfwzfd78uPe+02+z8fMmXvO55zPue+byeSV8+tzUlVIkgTwilEXIEmaOQwFSVLLUJAktQwFSVLLUJAktXYadQFbY+7cubVw4cJRlyFJ25WVK1c+WlVjk63brkNh4cKFrFixYtRlSNJ2JckDm1rn6SNJUstQkCS1DAVJUstQkCS1DAVJUstQkCS1DAVJUstQkCS1tuuH1yTt+E455RQmJibYe++9OfPMM0ddzg7PUJA0o01MTLBmzZpRlzFrePpIktQyFCRJLUNBktQyFCRJLUNBktQyFCRJrYGFQpJdktyU5LYkq5L8SdN+cZL7ktzaTIub9iT5QpLVSW5P8uZB1SZJmtwgn1N4Hjisqp5NsjNwQ5JvNev+uKq+ttH2RwCLmukQ4LzmU5I0JAM7UqieZ5vFnZuppuiyBLi06fdDYI8k8wZVnyTp5QZ6TSHJnCS3Ao8A11bVjc2qM5pTROcmeVXTNh94sK/7Q03bxvtcmmRFkhXr1q0bZPmSNOsMNBSq6oWqWgwsAA5O8kbgk8DrgbcCewL/ZTP3uayqxqtqfGxsbJvXLEmz2VDuPqqqJ4HrgcOram1ziuh54CLg4GazNcC+fd0WNG2SpCEZ5N1HY0n2aOZ3Bd4D/MOG6wRJAhwF3Nl0WQ4c19yFdCjwVFWtHVR9kqSXG+TdR/OAS5LMoRc+l1fVVUm+m2QMCHAr8B+a7a8GjgRWA88BJwywNknSJAYWClV1O3DQJO2HbWL7Ak4aVD2SpOn5RLMkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqTWwUEiyS5KbktyWZFWSP2na909yY5LVSS5L8sqm/VXN8upm/cJB1SZJmtwgjxSeBw6rqgOBxcDhSQ4FPgucW1X/GngCOLHZ/kTgiab93GY7SdIQDSwUqufZZnHnZirgMOBrTfslwFHN/JJmmWb9u5NkUPVJkl5uoNcUksxJcivwCHAt8H+BJ6tqfbPJQ8D8Zn4+8CBAs/4p4Jcm2efSJCuSrFi3bt0gy5ekWWegoVBVL1TVYmABcDDw+m2wz2VVNV5V42NjY1tdoyTp54Zy91FVPQlcD/xbYI8kOzWrFgBrmvk1wL4AzfpfBB4bRn2SpJ5B3n00lmSPZn5X4D3A3fTC4UPNZscD32jmlzfLNOu/W1U1qPokSS+30/SbbLF5wCVJ5tALn8ur6qokdwFfSfKnwC3ABc32FwBfTLIaeBw4ZoC1SZImMbBQqKrbgYMmab+X3vWFjdv/H/DhQdUjSZqeTzRLklqGgiSpZShIklqGgiSpZShIklqGgiSpZShIklqDfHhN0lb4x9N/bdQlzAjrH98T2In1jz/gnwmw36fvGOj+PVKQJLUMBUlSy1CQJLUMBUlSy1CQJLUMBUlSy1CQJLUMBUlSy1CQJLUMBUlSq1MoJHnZazIna5Mkbd+6Hil8smNbK8m+Sa5PcleSVUn+qGk/LcmaJLc205F9fT6ZZHWSe5L8ZvefIUnaFqYcEC/JEcCRwPwkX+hb9a+A9dPsez3w8aq6OcnuwMok1zbrzq2qszf6rgOAY4A3APsA30nyq1X1QvefI0naGtONkvpTYAXwAWBlX/szwH+aqmNVrQXWNvPPJLkbmD9FlyXAV6rqeeC+JKuBg4G/n6ZGSdI2MmUoVNVtwG1JvlxV/7KlX5JkIXAQcCPwNuBjSY6jFzgfr6on6AXGD/u6PcQkIZJkKbAUYL/99tvSkiRJk+h6TeHgJNcm+XGSe5Pcl+TeLh2T/ALwdeDkqnoaOA94HbCY3pHE5zan4KpaVlXjVTU+Nja2OV0lSdPo+pKdC+idLloJdD7Hn2RneoHwpaq6AqCqHu5bfz5wVbO4Bti3r/uCpk2SNCRdjxSeqqpvVdUjVfXYhmmqDklCL0zurqpz+trn9W32QeDOZn45cEySVyXZH1gE3NT5l0iStlrXI4Xrk5wFXAE8v6Gxqm6eos/bgI8AdyS5tWn7FHBsksVAAfcDv9/sa1WSy4G76N25dJJ3HknScHUNhUOaz/G+tgIO21SHqroByCSrrp6izxnAGR1rkiRtY51CoareNehCJEmj1ykUknx6svaqOn3bliNJGqWup49+1je/C/A+4O5tX44kaZS6nj56ybMESc4G/m4gFUmSRmZLh87ejd5zBJKkHUjXawp30LvbCGAOMAZ4PUGSdjBdrym8r29+PfBwVU03SqokaTvT6fRRVT0A7AG8n95TyAcMsihJ0mh0ffPaHwFfAl7bTF9K8oeDLEySNHxdTx+dCBxSVT8DSPJZeu85+ItBFSZJGr6udx+Fl46O+gKTD2EhSdqOdT1SuAi4McmVzfJR9EZAlSTtQLo+vHZOkv8DvL1pOqGqbhlYVZKkkZgyFJK8FZjbvEvhZuDmpv3IJK+oqpVT9ZckbV+mu6bwWXrvN9jYKuCsbV+OJGmUpguF3ZtnFF6iaZs7mJIkSaMyXSi8Zop1u23LQiRJozddKHwnyRnN+5aB3ruXk5wOfHewpUmShm26u48+Dvw1sLrvPcsHAiuAjw6yMEnS8E0ZCs0TzMcm+RXgDU3zqqq6d7odJ9kXuBTYi94Iq8uq6vNJ9gQuAxYC9wNHV9UTzdHI54EjgeeA32vueJIkDUnXJ5rPr6pvNtO9AEmum6bPeuDjVXUAcChwUpIDgFOB66pqEXBdswxwBLComZYC523eT5Ekba0pQyHJLkl+CZib5DVJ9mymhcD8qfpW1doN/9Ovqmfovb5zPrAEuKTZ7BJ6T0fTtF9aPT8E9kgybwt/lyRpC0x3TeH3gZOBfYCV/Hy8o6eBv+z6JU2IHATcCOxVVWubVRP0Ti9BLzAe7Ov2UNO2tq+NJEvpHUmw3377dS1BktTBlEcKVfX5qtof+ERV/UpV7d9MB1ZVp1BI8gvA14GTq+rpjfZf/PyNbp1U1bKqGq+q8bGxsc3pKkmaRtexj/4iya/Tuzi8U1/7pVP1S7IzvUD4UlVd0TQ/nGReVa1tTg890rSvAfbt676gaZMkDUnXl+x8ETib3oB4b22m8Wn6hN5IqndX1Tl9q5YDxzfzxwPf6Gs/rnkO4lDgqb7TTJJmqbm7vMheu65n7i4vjrqUWaHr0NnjwAHN6Z6u3gZ8BLij7xmHTwF/Blye5ETgAeDoZt3V9G5HXU3vltQTNuO7JO2gPvGmJ0ddwqzSNRTuBPZmo4u+U6mqG9j0i3jePcn2BZzUdf+SpG2vayjMBe5KchPw/IbGqvrAQKqSJI1E11A4bZBFSJJmhq53H30vyS8Di6rqO0l2A+YMtjRJ0rB1vfvoo8DXgP/ZNM0H/tegipIkjUbXsY9Oonc30dMAVfUT4LWDKkqSNBpdQ+H5qvrnDQtJdmIzn0SWJM18XUPhe0k+Beya5D3AV4FvDq4sSdIodA2FU4F1wB30Bsm7GvhvgypKkjQaXe8+ehE4v5kkSTuorncfvS/JLUkeT/J0kmeSPD19T0nS9qTrw2t/DvwWcMdmjn8kSdqOdL2m8CBwp4EgSTu2rkcKpwBXJ/keLx376JxNd5EkbW+6hsIZwLPALsArB1eOJGmUuobCPlX1xoFWIkkaua7XFK5O8t6BViJJGrmuofAHwDVJ/slbUiVpx9X14bXdB12IJGn0ul5TIMmbgIX9farqigHUJEkaka5PNF8IXAj8NvD+ZnrfdH2SPJLkzr6205KsSXJrMx3Zt+6TSVYnuSfJb27Rr5EkbZWuRwqHVtUBm7nvi4G/BC7dqP3cqjq7vyHJAcAxwBuAfYDvJPnVqnphM79TkrQVul5o/vvmH+7Oqur7wOMdN18CfKWqnq+q+4DVwMGb832SpK3XNRQupRcM9yS5PckdSW7fwu/8WLOPC5O8pmmbT28ojQ0eatpeJsnSJCuSrFi3bt0WliBJmkzXULgA+AhwOD+/nvD+Lfi+84DXAYuBtcDnNncHVbWsqsaranxsbGwLSpAkbUrXawrrqmr51n5ZVT28YT7J+cBVzeIaYN++TRc0bZKkIeoaCrck+TK9V3D2D4i3WbekJplXVWubxQ8CG+5MWg58Ock59C40LwJu2px9S5K2XtdQ2JVeGPQPdVHAJkMhyd8C7wTmJnkI+AzwziSLm77303u1J1W1KsnlwF3AeuAk7zySpOHr+kTzCZu746o6dpLmC6bY/gx6o7FKkkak68NrC5Jc2TyM9kiSrydZMOjiJEnD1fXuo4vonfffp5m+2bRJknYgXUNhrKouqqr1zXQx4P2gkrSD6RoKjyX53SRzmul3gccGWZgkafi6hsK/A44GJug9dPYh4PcGVJMkaUS63pJ6OnB8VT0BkGRP4Gx6YSFJ2kF0PVJ404ZAAKiqx4GDBlOSJGlUuobCK/oGr9twpND5BT2SpO1D13/YP0dvlNSvNssfxgfNJGmH0/WJ5kuTrAAOa5p+q6ruGlxZkqRR6HwKqAkBg0CSdmBdrylIkmYBQ0GS1DIUJEktQ0GS1DIUJEktQ0GS1DIUJEktQ0GS1BpYKCS5sHl15519bXsmuTbJT5rP1zTtSfKFJKuT3J7kzYOqS5K0aYM8UrgYOHyjtlOB66pqEXBdswxwBLComZYC5w2wLknSJgwsFKrq+8DjGzUvAS5p5i8Bjuprv7R6fgjskWTeoGqTJE1u2NcU9qqqtc38BLBXMz8feLBvu4eaNknSEI3sQnNVFVCb2y/J0iQrkqxYt27dACqTpNlr2KHw8IbTQs3nI037GmDfvu0WNG0vU1XLqmq8qsbHxsYGWqwkzTbDDoXlwPHN/PHAN/raj2vuQjoUeKrvNJMkaUgG9krNJH8LvBOYm+Qh4DPAnwGXJzkReAA4utn8auBIYDXwHHDCoOqSJG3awEKhqo7dxKp3T7JtAScNqhZJUjc+0SxJahkKkqSWoSBJahkKkqSWoSBJahkKkqSWoSBJahkKkqSWoSBJahkKkqSWoSBJahkKkqSWoSBJahkKkqSWoSBJahkKkqSWoSBJahkKkqSWoSBJahkKkqTWTqP40iT3A88ALwDrq2o8yZ7AZcBC4H7g6Kp6YhT1zUannHIKExMT7L333px55pmjLkfSiIzySOFdVbW4qsab5VOB66pqEXBds6whmZiYYM2aNUxMTIy6FEkjNJNOHy0BLmnmLwGOGmEtkjQrjSoUCvh2kpVJljZte1XV2mZ+Athrso5JliZZkWTFunXrhlGrJM0aI7mmALy9qtYkeS1wbZJ/6F9ZVZWkJutYVcuAZQDj4+OTbiNJ2jIjOVKoqjXN5yPAlcDBwMNJ5gE0n4+MojZJms2GHgpJXp1k9w3zwHuBO4HlwPHNZscD3xh2bZI0243i9NFewJVJNnz/l6vqmiQ/Ai5PciLwAHD0CGqTpFlt6KFQVfcCB07S/hjw7mHX85Y/vnTYXzkj7f7oM8wB/vHRZ/wzAVaeddyoS5BGYibdkipJGjFDQZLUMhQkSS1DQZLUMhQkSS1DQZLUMhQkSa1RjX2kGebFV776JZ+SZidDQQD8bNF7R12CpBnA00eSpJahIElqGQqSpJahIElqGQqSpJahIElqGQqSpJahIElqGQqSpJahIElqzbhQSHJ4knuSrE5y6qjrkaTZZEaFQpI5wF8BRwAHAMcmOWC0VUnS7DGjQgE4GFhdVfdW1T8DXwGWjLgmSZo1ZtooqfOBB/uWHwIO6d8gyVJgabP4bJJ7hlTbbDAXeHTURcwEOfv4UZegl/Lv5gafybbYyy9vasVMC4VpVdUyYNmo69gRJVlRVeOjrkPamH83h2emnT5aA+zbt7ygaZMkDcFMC4UfAYuS7J/klcAxwPIR1yRJs8aMOn1UVeuTfAz4O2AOcGFVrRpxWbOJp+U0U/l3c0hSVaOuQZI0Q8y000eSpBEyFCRJLUNBk0ryziRXjboOzT5JFia5c2u30ZYxFCRJrRl195GGJ8mrgcvpPQsyB/jvwFPAnwPPATeMrjqJOUnOB36d3rNKS+iNh3Zhs/7boypsR+eRwux1OPDTqjqwqt4IXAOcD7wfeAuw9yiL06y3CPirqnoD8CTw28BFwB9W1YEjrWwHZyjMXncA70ny2STvAPYH7quqn1TvPuW/GW15muXuq6pbm/mVwEJgj6r6ftP2xZFUNQsYCrNUVf0YeDO9cPhT4AOjrUh6ief75l+gNyCehsBQmKWS7AM8V1V/A5xF79ztwiSvazY5dmTFSS/3JPBkkrc3y78zymJ2ZF5onr1+DTgryYvAvwB/QO9/Y/87yXPAD4DdR1iftLETgAuTFF5oHhiHuZAktTx9JElqGQqSpJahIElqGQqSpJahIElqGQpSI8lpST4xxfqxJDcmuSXJO5JcnWSPafZ5epLfaOZPTrJb37pp+0vD5i2pUiPJacCzVXX2JtYfA/xGVf37Ldz//cB4VT26xUVKA+aRgma1JP81yY+T3AD8m6btdUmuSbIyyQ+SvD7JYuBMYEmSW5PsmuT+JHObsf3vTnJ+klVJvp1k12ZfFyf5UJL/COwDXJ/k+mbd/UnmNvP/OcmdzXRy07bJ/UqDYiho1kryFuAYYDFwJPDWZtUyeqNxvgX4BPA/msHZPg1cVlWLq+qfNtrdZKN6tqrqC8BPgXdV1bsmqeME4BDgUOCjSQ7qsl9pW3OYC81m7wCurKrnAJIsB3ahNw7UV5Ns2O5VHfY12aieXb29qeNnTR1XNLUt38r9SpvNUJBe6hXAk1W1eDP7bTyq57Y6zTOo/UqT8vSRZrPvA0c11wd2p/eCoeeA+5J8GCA92+qlLs8w+SCDP2jq2K15I94HmzZp6AwFzVpVdTNwGXAb8C3gR82q3wFOTHIbsIreqyC3hWXANRsuNG9Ux8XATcCNwF9X1S3b6DulzeItqZKklkcKkqSWoSBJahkKkqSWoSBJahkKkqSWoSBJahkKkqTW/wdRe70QU7juvgAAAABJRU5ErkJggg==\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.to_csv('Mavins_channel.csv', index=False)\n",
        "df.to_excel('Mavins_channel.xls', index=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SXwVGKFt8sfW",
        "outputId": "52c7f4cb-03b7-4aee-de7a-420a7febbec2"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: FutureWarning: As the xlwt package is no longer maintained, the xlwt engine will be removed in a future version of pandas. This is the only engine in pandas that supports writing in the xls format. Install openpyxl and write to an xlsx file instead. You can set the option io.excel.xls.writer to 'xlwt' to silence this warning. While this option is deprecated and will also raise a warning, it can be globally set and the warning suppressed.\n",
            "  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Sr2kCiUX8sm3",
        "outputId": "fc9cfc28-6f86-472c-ac77-1289d53e75cb"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "video_id                  object\n",
              "channelTitle              object\n",
              "title                     object\n",
              "description               object\n",
              "publishedAt       datetime64[ns]\n",
              "viewCount                  int64\n",
              "likeCount                  int64\n",
              "favouriteCount             int64\n",
              "commentCount               int64\n",
              "duration                  object\n",
              "definition                object\n",
              "caption                   object\n",
              "Release_Time      datetime64[ns]\n",
              "Release_Month             object\n",
              " Release_Day              object\n",
              "Date              datetime64[ns]\n",
              "TotalSecs                float64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Date'] = df['Date'].dt.tz_localize(None)\n"
      ],
      "metadata": {
        "id": "VgUxYw4H_i6g"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['Release_Time']=df['Release_Time'].dt.tz_localize(None)"
      ],
      "metadata": {
        "id": "rB2LcRMR_uoF"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['publishedAt']=df['publishedAt'].dt.tz_localize(None)"
      ],
      "metadata": {
        "id": "tuAWlnJ0AFu1"
      },
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "this done becausee excel does not support datetime with timezones so we set tz_localize to none"
      ],
      "metadata": {
        "id": "N7y9jTbzsUV8"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "lets perform some statistics"
      ],
      "metadata": {
        "id": "HqvZoRfvssfo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 756
        },
        "id": "oEFZnOESs2RK",
        "outputId": "ad3cf512-dd54-4e63-e74c-33ee19f22d2f"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      video_id  channelTitle  \\\n",
              "0  v8SNlvR86xc  MavinRecords   \n",
              "2  A_09215NMNY  MavinRecords   \n",
              "4  XpqWIJEc_y0  MavinRecords   \n",
              "6  NwuOq8mItY4  MavinRecords   \n",
              "8  tAPa04I6ZqE  MavinRecords   \n",
              "\n",
              "                                               title  \\\n",
              "0  Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "2  Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ...   \n",
              "4          Boy Spyce - Nobody (Official Music Video)   \n",
              "6          Boy Spyce - Nobody (Official Lyric Audio)   \n",
              "8      Boy Spyce - Bad Things (Official Lyric Audio)   \n",
              "\n",
              "                                         description         publishedAt  \\\n",
              "0  Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ... 2022-05-13 11:00:38   \n",
              "2  Mavins, Crayon, Ayra Starr, LADIPOE, Magixx & ... 2022-05-12 22:59:37   \n",
              "4  Boy Spyce - Nobody\\nStream BOY SPYCE EP: https... 2022-04-15 10:00:16   \n",
              "6  Boy Spyce - Nobody\\nStream BOY SPYCE EP: https... 2022-04-14 23:04:51   \n",
              "8  Boy Spyce - Bad Things\\nStream BOY SPYCE EP: h... 2022-04-14 23:04:48   \n",
              "\n",
              "   viewCount  likeCount  favouriteCount  commentCount duration definition  \\\n",
              "0    2532705      79357               0          3675  PT3M24S         hd   \n",
              "2     359767      12577               0           865  PT3M26S         hd   \n",
              "4     982108      26121               0           993  PT2M58S         hd   \n",
              "6      42359       1310               0            54  PT2M42S         hd   \n",
              "8      62306       2232               0           126  PT2M51S         hd   \n",
              "\n",
              "  caption        Release_Time Release_Month  Release_Day       Date  TotalSecs  \n",
              "0   false 1900-01-01 11:00:38           May       Friday 2022-05-13      204.0  \n",
              "2   false 1900-01-01 22:59:37           May     Thursday 2022-05-12      206.0  \n",
              "4   false 1900-01-01 10:00:16         April       Friday 2022-04-15      178.0  \n",
              "6   false 1900-01-01 23:04:51         April     Thursday 2022-04-14      162.0  \n",
              "8   false 1900-01-01 23:04:48         April     Thursday 2022-04-14      171.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-263737db-8503-4c33-a8b0-da31456fcff7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>video_id</th>\n",
              "      <th>channelTitle</th>\n",
              "      <th>title</th>\n",
              "      <th>description</th>\n",
              "      <th>publishedAt</th>\n",
              "      <th>viewCount</th>\n",
              "      <th>likeCount</th>\n",
              "      <th>favouriteCount</th>\n",
              "      <th>commentCount</th>\n",
              "      <th>duration</th>\n",
              "      <th>definition</th>\n",
              "      <th>caption</th>\n",
              "      <th>Release_Time</th>\n",
              "      <th>Release_Month</th>\n",
              "      <th>Release_Day</th>\n",
              "      <th>Date</th>\n",
              "      <th>TotalSecs</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>v8SNlvR86xc</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-13 11:00:38</td>\n",
              "      <td>2532705</td>\n",
              "      <td>79357</td>\n",
              "      <td>0</td>\n",
              "      <td>3675</td>\n",
              "      <td>PT3M24S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 11:00:38</td>\n",
              "      <td>May</td>\n",
              "      <td>Friday</td>\n",
              "      <td>2022-05-13</td>\n",
              "      <td>204.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A_09215NMNY</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>Mavins, Crayon, Ayra Starr, LADIPOE, Magixx &amp; ...</td>\n",
              "      <td>2022-05-12 22:59:37</td>\n",
              "      <td>359767</td>\n",
              "      <td>12577</td>\n",
              "      <td>0</td>\n",
              "      <td>865</td>\n",
              "      <td>PT3M26S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 22:59:37</td>\n",
              "      <td>May</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>2022-05-12</td>\n",
              "      <td>206.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>XpqWIJEc_y0</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Boy Spyce - Nobody (Official Music Video)</td>\n",
              "      <td>Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...</td>\n",
              "      <td>2022-04-15 10:00:16</td>\n",
              "      <td>982108</td>\n",
              "      <td>26121</td>\n",
              "      <td>0</td>\n",
              "      <td>993</td>\n",
              "      <td>PT2M58S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 10:00:16</td>\n",
              "      <td>April</td>\n",
              "      <td>Friday</td>\n",
              "      <td>2022-04-15</td>\n",
              "      <td>178.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>NwuOq8mItY4</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Boy Spyce - Nobody (Official Lyric Audio)</td>\n",
              "      <td>Boy Spyce - Nobody\\nStream BOY SPYCE EP: https...</td>\n",
              "      <td>2022-04-14 23:04:51</td>\n",
              "      <td>42359</td>\n",
              "      <td>1310</td>\n",
              "      <td>0</td>\n",
              "      <td>54</td>\n",
              "      <td>PT2M42S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 23:04:51</td>\n",
              "      <td>April</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>2022-04-14</td>\n",
              "      <td>162.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>tAPa04I6ZqE</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Boy Spyce - Bad Things (Official Lyric Audio)</td>\n",
              "      <td>Boy Spyce - Bad Things\\nStream BOY SPYCE EP: h...</td>\n",
              "      <td>2022-04-14 23:04:48</td>\n",
              "      <td>62306</td>\n",
              "      <td>2232</td>\n",
              "      <td>0</td>\n",
              "      <td>126</td>\n",
              "      <td>PT2M51S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 23:04:48</td>\n",
              "      <td>April</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>2022-04-14</td>\n",
              "      <td>171.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-263737db-8503-4c33-a8b0-da31456fcff7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-263737db-8503-4c33-a8b0-da31456fcff7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-263737db-8503-4c33-a8b0-da31456fcff7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "ewXrQbuxs9gS",
        "outputId": "8b82f7e6-0c16-49b5-bf2a-30cb89e53734"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          viewCount     likeCount  favouriteCount  commentCount    TotalSecs\n",
              "count  7.040000e+02  7.040000e+02           704.0    704.000000   704.000000\n",
              "mean   8.742938e+05  6.890497e+03             0.0    247.738636   184.512784\n",
              "std    6.288626e+06  5.030767e+04             0.0   1033.064733   214.253728\n",
              "min    6.660000e+02  1.100000e+01             0.0      0.000000    14.000000\n",
              "25%    9.505250e+03  1.697500e+02             0.0     11.000000    61.000000\n",
              "50%    2.880250e+04  4.785000e+02             0.0     30.000000   185.000000\n",
              "75%    1.097125e+05  1.414750e+03             0.0     87.500000   222.250000\n",
              "max    1.272335e+08  1.167395e+06             0.0  17133.000000  3824.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8eeeeb40-eacd-4d07-96f7-cc1a98cc79b8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>viewCount</th>\n",
              "      <th>likeCount</th>\n",
              "      <th>favouriteCount</th>\n",
              "      <th>commentCount</th>\n",
              "      <th>TotalSecs</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>7.040000e+02</td>\n",
              "      <td>7.040000e+02</td>\n",
              "      <td>704.0</td>\n",
              "      <td>704.000000</td>\n",
              "      <td>704.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>8.742938e+05</td>\n",
              "      <td>6.890497e+03</td>\n",
              "      <td>0.0</td>\n",
              "      <td>247.738636</td>\n",
              "      <td>184.512784</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>6.288626e+06</td>\n",
              "      <td>5.030767e+04</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1033.064733</td>\n",
              "      <td>214.253728</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>6.660000e+02</td>\n",
              "      <td>1.100000e+01</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>14.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>9.505250e+03</td>\n",
              "      <td>1.697500e+02</td>\n",
              "      <td>0.0</td>\n",
              "      <td>11.000000</td>\n",
              "      <td>61.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2.880250e+04</td>\n",
              "      <td>4.785000e+02</td>\n",
              "      <td>0.0</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>185.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.097125e+05</td>\n",
              "      <td>1.414750e+03</td>\n",
              "      <td>0.0</td>\n",
              "      <td>87.500000</td>\n",
              "      <td>222.250000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1.272335e+08</td>\n",
              "      <td>1.167395e+06</td>\n",
              "      <td>0.0</td>\n",
              "      <td>17133.000000</td>\n",
              "      <td>3824.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8eeeeb40-eacd-4d07-96f7-cc1a98cc79b8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8eeeeb40-eacd-4d07-96f7-cc1a98cc79b8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8eeeeb40-eacd-4d07-96f7-cc1a98cc79b8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nSgdolYxtqyp",
        "outputId": "7e1b257b-d02d-44aa-c53b-56b19c860e38"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 704 entries, 0 to 935\n",
            "Data columns (total 17 columns):\n",
            " #   Column          Non-Null Count  Dtype         \n",
            "---  ------          --------------  -----         \n",
            " 0   video_id        704 non-null    object        \n",
            " 1   channelTitle    704 non-null    object        \n",
            " 2   title           704 non-null    object        \n",
            " 3   description     704 non-null    object        \n",
            " 4   publishedAt     704 non-null    datetime64[ns]\n",
            " 5   viewCount       704 non-null    int64         \n",
            " 6   likeCount       704 non-null    int64         \n",
            " 7   favouriteCount  704 non-null    int64         \n",
            " 8   commentCount    704 non-null    int64         \n",
            " 9   duration        704 non-null    object        \n",
            " 10  definition      704 non-null    object        \n",
            " 11  caption         704 non-null    object        \n",
            " 12  Release_Time    704 non-null    datetime64[ns]\n",
            " 13  Release_Month   704 non-null    object        \n",
            " 14   Release_Day    704 non-null    object        \n",
            " 15  Date            704 non-null    datetime64[ns]\n",
            " 16  TotalSecs       704 non-null    float64       \n",
            "dtypes: datetime64[ns](3), float64(1), int64(4), object(9)\n",
            "memory usage: 115.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['title'].nunique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jbfvs7gxuoeq",
        "outputId": "bab333f8-dabe-4680-8c47-e3830eaf8489"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "694"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(df[df['likeCount']>=1000])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WedNZ9dE5Xjf",
        "outputId": "4e2400ef-5b77-48f2-8741-7be0c6b520f4"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "223"
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[df['viewCount'].max()==df['viewCount']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 266
        },
        "id": "On2o7-Zs6Tmm",
        "outputId": "e5a4f4d3-84fc-4c9c-c422-d86732054c99"
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        video_id  channelTitle  \\\n",
              "684  hJBi780qFas  MavinRecords   \n",
              "\n",
              "                                                 title  \\\n",
              "684  Korede Bello  - Do Like That ( Official Music ...   \n",
              "\n",
              "                                           description         publishedAt  \\\n",
              "684  Check out the music video for Korede's new sin... 2016-11-22 18:19:27   \n",
              "\n",
              "     viewCount  likeCount  favouriteCount  commentCount duration definition  \\\n",
              "684  127233515    1167395               0         17133  PT3M56S         hd   \n",
              "\n",
              "    caption        Release_Time Release_Month  Release_Day       Date  \\\n",
              "684   false 1900-01-01 18:19:27      November      Tuesday 2016-11-22   \n",
              "\n",
              "     TotalSecs  \n",
              "684      236.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3d7b7436-3495-4095-9a86-398b90bb1885\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>video_id</th>\n",
              "      <th>channelTitle</th>\n",
              "      <th>title</th>\n",
              "      <th>description</th>\n",
              "      <th>publishedAt</th>\n",
              "      <th>viewCount</th>\n",
              "      <th>likeCount</th>\n",
              "      <th>favouriteCount</th>\n",
              "      <th>commentCount</th>\n",
              "      <th>duration</th>\n",
              "      <th>definition</th>\n",
              "      <th>caption</th>\n",
              "      <th>Release_Time</th>\n",
              "      <th>Release_Month</th>\n",
              "      <th>Release_Day</th>\n",
              "      <th>Date</th>\n",
              "      <th>TotalSecs</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>684</th>\n",
              "      <td>hJBi780qFas</td>\n",
              "      <td>MavinRecords</td>\n",
              "      <td>Korede Bello  - Do Like That ( Official Music ...</td>\n",
              "      <td>Check out the music video for Korede's new sin...</td>\n",
              "      <td>2016-11-22 18:19:27</td>\n",
              "      <td>127233515</td>\n",
              "      <td>1167395</td>\n",
              "      <td>0</td>\n",
              "      <td>17133</td>\n",
              "      <td>PT3M56S</td>\n",
              "      <td>hd</td>\n",
              "      <td>false</td>\n",
              "      <td>1900-01-01 18:19:27</td>\n",
              "      <td>November</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>2016-11-22</td>\n",
              "      <td>236.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d7b7436-3495-4095-9a86-398b90bb1885')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3d7b7436-3495-4095-9a86-398b90bb1885 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3d7b7436-3495-4095-9a86-398b90bb1885');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['definition'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Dn-lRuH3_TEl",
        "outputId": "073e2951-08d1-48db-f2af-9e8817b52abf"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "hd    617\n",
              "sd     87\n",
              "Name: definition, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby('Release_Month')['viewCount'].sum().sort_values(ascending=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QnzJwsbN_cjC",
        "outputId": "12f8f827-8080-47e0-daa4-1ebe0485398a"
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Release_Month\n",
              "November     137219819\n",
              "July          93669763\n",
              "December      70030420\n",
              "September     66651092\n",
              "October       65138623\n",
              "March         47456606\n",
              "June          38919543\n",
              "May           30611532\n",
              "January       20857843\n",
              "April         17899513\n",
              "February      15796057\n",
              "August        11252056\n",
              "Name: viewCount, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "to get the sum  of the viewcount by month by grouping"
      ],
      "metadata": {
        "id": "wPes_2V6ZVXe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.loc[df['viewCount'].sort_values(ascending=False).head().index][['video_id','title','viewCount','likeCount']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "hxKmV02BLKAk",
        "outputId": "37bfc954-c974-4887-de4f-08d5b89580bd"
      },
      "execution_count": 136,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        video_id                                              title  \\\n",
              "684  hJBi780qFas  Korede Bello  - Do Like That ( Official Music ...   \n",
              "690  5VVdLympnQE                        Korede Bello - Do Like That   \n",
              "904  f6-gjQQNIlA  Adaobi - Official Video by Mavins Ft. Don Jazz...   \n",
              "916  vDHBe1BA-Nk  MAVINS - DOROBUCCI ft Don Jazzy, Tiwa Savage, ...   \n",
              "836  UXyUMMMETsA  Korede Bello ft. Tiwa Savage - Romantic ( Offi...   \n",
              "\n",
              "     viewCount  likeCount  \n",
              "684  127233515    1167395  \n",
              "690   56643666     455841  \n",
              "904   54080700     187564  \n",
              "916   44846069     155058  \n",
              "836   38856535     211321  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dddc92cb-a68a-4fe3-b9c0-c7a96c1b50e0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>video_id</th>\n",
              "      <th>title</th>\n",
              "      <th>viewCount</th>\n",
              "      <th>likeCount</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>684</th>\n",
              "      <td>hJBi780qFas</td>\n",
              "      <td>Korede Bello  - Do Like That ( Official Music ...</td>\n",
              "      <td>127233515</td>\n",
              "      <td>1167395</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>690</th>\n",
              "      <td>5VVdLympnQE</td>\n",
              "      <td>Korede Bello - Do Like That</td>\n",
              "      <td>56643666</td>\n",
              "      <td>455841</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>904</th>\n",
              "      <td>f6-gjQQNIlA</td>\n",
              "      <td>Adaobi - Official Video by Mavins Ft. Don Jazz...</td>\n",
              "      <td>54080700</td>\n",
              "      <td>187564</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>916</th>\n",
              "      <td>vDHBe1BA-Nk</td>\n",
              "      <td>MAVINS - DOROBUCCI ft Don Jazzy, Tiwa Savage, ...</td>\n",
              "      <td>44846069</td>\n",
              "      <td>155058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>836</th>\n",
              "      <td>UXyUMMMETsA</td>\n",
              "      <td>Korede Bello ft. Tiwa Savage - Romantic ( Offi...</td>\n",
              "      <td>38856535</td>\n",
              "      <td>211321</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dddc92cb-a68a-4fe3-b9c0-c7a96c1b50e0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-dddc92cb-a68a-4fe3-b9c0-c7a96c1b50e0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-dddc92cb-a68a-4fe3-b9c0-c7a96c1b50e0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 136
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "using the loc function sortvalues and index to find the top 5 highest viewcount and displayiig thier title viewcount,likecount"
      ],
      "metadata": {
        "id": "Dj5jJWBNZefH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.nlargest(5,'likeCount')[['video_id','title','viewCount','likeCount']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "bl45UXvkO94z",
        "outputId": "3f96c96c-0916-4401-8e25-1f349a8053c6"
      },
      "execution_count": 137,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        video_id                                              title  \\\n",
              "684  hJBi780qFas  Korede Bello  - Do Like That ( Official Music ...   \n",
              "690  5VVdLympnQE                        Korede Bello - Do Like That   \n",
              "836  UXyUMMMETsA  Korede Bello ft. Tiwa Savage - Romantic ( Offi...   \n",
              "904  f6-gjQQNIlA  Adaobi - Official Video by Mavins Ft. Don Jazz...   \n",
              "176  Mude7cCSs9s  LADIPOE feat. Simi - Know You (Official Music ...   \n",
              "\n",
              "     viewCount  likeCount  \n",
              "684  127233515    1167395  \n",
              "690   56643666     455841  \n",
              "836   38856535     211321  \n",
              "904   54080700     187564  \n",
              "176   18894406     170079  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d6f61a50-b5cb-4e74-ad5b-927990e81ed7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>video_id</th>\n",
              "      <th>title</th>\n",
              "      <th>viewCount</th>\n",
              "      <th>likeCount</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>684</th>\n",
              "      <td>hJBi780qFas</td>\n",
              "      <td>Korede Bello  - Do Like That ( Official Music ...</td>\n",
              "      <td>127233515</td>\n",
              "      <td>1167395</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>690</th>\n",
              "      <td>5VVdLympnQE</td>\n",
              "      <td>Korede Bello - Do Like That</td>\n",
              "      <td>56643666</td>\n",
              "      <td>455841</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>836</th>\n",
              "      <td>UXyUMMMETsA</td>\n",
              "      <td>Korede Bello ft. Tiwa Savage - Romantic ( Offi...</td>\n",
              "      <td>38856535</td>\n",
              "      <td>211321</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>904</th>\n",
              "      <td>f6-gjQQNIlA</td>\n",
              "      <td>Adaobi - Official Video by Mavins Ft. Don Jazz...</td>\n",
              "      <td>54080700</td>\n",
              "      <td>187564</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>176</th>\n",
              "      <td>Mude7cCSs9s</td>\n",
              "      <td>LADIPOE feat. Simi - Know You (Official Music ...</td>\n",
              "      <td>18894406</td>\n",
              "      <td>170079</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d6f61a50-b5cb-4e74-ad5b-927990e81ed7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d6f61a50-b5cb-4e74-ad5b-927990e81ed7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d6f61a50-b5cb-4e74-ad5b-927990e81ed7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 137
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top10_like=df.nlargest(10,'likeCount')[['video_id','likeCount']].set_index('video_id')\n",
        "top10_like"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 394
        },
        "id": "H9NzIwQjXAQ7",
        "outputId": "eae98574-94dd-436a-facd-bc4081b957ed"
      },
      "execution_count": 142,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             likeCount\n",
              "video_id              \n",
              "hJBi780qFas    1167395\n",
              "5VVdLympnQE     455841\n",
              "UXyUMMMETsA     211321\n",
              "f6-gjQQNIlA     187564\n",
              "Mude7cCSs9s     170079\n",
              "vDHBe1BA-Nk     155058\n",
              "EJIDnsi7r8o     109570\n",
              "w14zUTXOhYE     102350\n",
              "SmbzdwnpZZs      99284\n",
              "il7vIMecTaI      92229"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e9e101e1-73b3-473d-9c17-aa32fe81da73\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>likeCount</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>video_id</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>hJBi780qFas</th>\n",
              "      <td>1167395</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5VVdLympnQE</th>\n",
              "      <td>455841</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>UXyUMMMETsA</th>\n",
              "      <td>211321</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>f6-gjQQNIlA</th>\n",
              "      <td>187564</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mude7cCSs9s</th>\n",
              "      <td>170079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>vDHBe1BA-Nk</th>\n",
              "      <td>155058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EJIDnsi7r8o</th>\n",
              "      <td>109570</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>w14zUTXOhYE</th>\n",
              "      <td>102350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SmbzdwnpZZs</th>\n",
              "      <td>99284</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>il7vIMecTaI</th>\n",
              "      <td>92229</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9e101e1-73b3-473d-9c17-aa32fe81da73')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e9e101e1-73b3-473d-9c17-aa32fe81da73 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e9e101e1-73b3-473d-9c17-aa32fe81da73');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 142
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.barplot(x='likeCount',y=top10_like.index,data=top10_like)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "UoxBsCStXjUH",
        "outputId": "b3e8cacf-cdf4-4a70-86b7-8f05a8721b44"
      },
      "execution_count": 143,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f0e09aa38d0>"
            ]
          },
          "metadata": {},
          "execution_count": 143
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "using seaborn to display the top 10 vieos id by like count\n"
      ],
      "metadata": {
        "id": "7f71j_DHZ2uO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "QaJYg1uZZDQq"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}